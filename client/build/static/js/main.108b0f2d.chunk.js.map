{"version":3,"sources":["components/Navigation.js","components/Exercise.js","components/ExerciseList.js","pages/HomePage.js","pages/AddExercisePage.js","pages/EditExercisePage.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","to","Exercise","exercise","onEdit","onDelete","name","reps","weight","unit","date","substring","className","onClick","_id","ExerciseList","exercises","id","map","i","HomePage","setExercise","history","useHistory","useState","setExercises","loadExercises","fetch","response","json","onEditExercise","push","onDeleteExercise","method","status","getResponse","alert","console","error","useEffect","AddExercisePage","setName","setReps","setWeight","setUnit","setDate","addExercise","newExercise","body","JSON","stringify","headers","onSubmit","e","preventDefault","for","type","placeholder","value","onChange","target","required","minLength","min","EditExercisePage","editExercise","errMessage","Error","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.108b0f2d.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Navigation() {\n  return (\n    <nav>\n        <Link to=\"/\">Home</Link>\n        <Link to=\"../add-exercise\">Add Exercise</Link>\n    </nav>\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\nimport { FaPencilAlt, FaTrash } from \"react-icons/fa\";\n\nfunction Exercise({ exercise, onEdit, onDelete }) {\n    return (\n        <tr>\n            <td>{exercise.name}</td>\n            <td>{exercise.reps}</td>\n            <td>{exercise.weight}</td>\n            <td>{exercise.unit}</td>\n            <td>{exercise.date.substring(0, 10)}</td>\n            <td>\n                <div className=\"modifier\">\n                    <FaPencilAlt onClick={() => onEdit(exercise)} />\n                </div></td>\n            <td>\n                <div className=\"modifier\">\n                    <FaTrash onClick={() => onDelete(exercise._id)} />\n                </div>\n            </td>\n\n\n        </tr >\n    );\n}\n\nexport default Exercise;","import React from 'react';\nimport Exercise from './Exercise';\n\nfunction ExerciseList({ exercises, onDelete, onEdit }) {\n    return (\n        <table id=\"exercises\">\n            <caption>Workout History</caption>\n            <thead>\n                <tr>\n                    <th>Exercise</th>\n                    <th>Reps</th>\n                    <th>Weight</th>\n                    <th>Unit</th>\n                    <th>Date</th>\n                    <th>Edit</th>\n                    <th>Delete</th>\n                </tr>\n            </thead>\n            <tbody>\n                {exercises.map((exercise, i) => \n                    <Exercise \n                        exercise={exercise} \n                        key={i}\n                        onDelete={onDelete}\n                        onEdit={onEdit} \n                    />)}\n            </tbody>\n        </table>\n    );\n}\n\nexport default ExerciseList;\n","import React from 'react';\nimport ExerciseList from '../components/ExerciseList';\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nfunction HomePage({ setExercise }) {\n    // Use the history for updating\n    const history = useHistory();\n\n    // Use state to bring in the data\n    const [exercises, setExercises] = useState([]);\n\n    // RETRIEVE the list of exercises\n    const loadExercises = async () => {\n        const response = await fetch('/exercises');\n        const exercises = await response.json();\n        setExercises(exercises);\n    } \n    \n\n    // UPDATE a exercise\n    const onEditExercise = async exercise => {\n        setExercise(exercise);\n        history.push(\"/edit-exercise\");\n    }\n\n\n    // DELETE a exercise  \n    const onDeleteExercise = async _id => {\n        const response = await fetch(`https://swolebro-api.herokuapp.com/exercises/${_id}`, { method: 'DELETE' });\n        if (response.status === 204) {\n            const getResponse = await fetch('/exercises');\n            const exercises = await getResponse.json();\n            setExercises(exercises);\n            alert(\"Exercise Removed!\");\n        } else {\n            console.error(`Failed to delete exercise with _id = ${_id}. Error Code = ${response.status}`)\n        }\n    }\n\n    // LOAD the exercises\n    useEffect(() => {\n        loadExercises();\n    }, []);\n    \n\n    // DISPLAY the exercises\n    return (\n        <>\n            <article>\n                <h2>About</h2>\n                <p>Here you can view, modify, and delete your existing lifts or exercises. <br></br>To add a new exercise, select the \"Add Exercise\" button above.</p>\n                <ExerciseList \n                    exercises={exercises} \n                    onEdit={onEditExercise} \n                    onDelete={onDeleteExercise} \n                />\n            </article>\n        </>\n    );\n}\n\nexport default HomePage;","import React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nexport const AddExercisePage = () => {\n\n    const [name, setName] = useState('');\n    const [reps, setReps] = useState('');\n    const [weight, setWeight] = useState('');\n    const [unit, setUnit] = useState('lbs');\n    const [date, setDate] = useState('');\n    \n    const history = useHistory();\n\n    const addExercise = async () => {\n        const newExercise = { name, reps, weight, unit, date };\n        const response = await fetch('https://swolebro-api.herokuapp.com/exercises', {\n            method: 'post',\n            body: JSON.stringify(newExercise),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n        if(response.status === 201){\n            alert(\"Nice work! Now on to the next set!\");\n        } else {\n            alert(`Error ${response.status}: \"Invalid request\"`);\n        }\n        history.push(\"/\");\n    };\n\n    return (\n        <>\n        <article>\n            <h2>Add a new exercise</h2>\n            <p>Fill in the following to add a new exercise to your workout</p>\n            <form onSubmit={(e) => { e.preventDefault();}}>\n                <fieldset>\n                    {/* <legend>Which exercise are you adding?</legend> */}\n                    <p><label for=\"name\">Exercise name</label>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Squat, Bench, Deadlift, eg.\"\n                        value={name}\n                        onChange={e => setName(e.target.value)} \n                        required=\"required\"\n                        minLength=\"1\"\n                        id=\"name\" /></p>\n                    <p><label for=\"reps\">Reps Completed</label>\n                    <input\n                        type=\"number\"\n                        value={reps}\n                        placeholder=\"# of Reps\"\n                        onChange={e => setReps(e.target.value)} \n                        min=\"1\"\n                        required=\"required\"\n                        id=\"reps\" /></p>\n                    <p><label for=\"weight\">Weight</label>\n                    <input\n                        type=\"number\"\n                        placeholder=\"###\"\n                        value={weight}\n                        onChange={e => setWeight(e.target.value)}\n                        min=\"1\"\n                        required=\"required\"\n                        id=\"weight\" /></p>\n                    <p><label for=\"unit\">Unit</label>\n                    <input\n                        type=\"text\"\n                        placeholder=\"lbs, kgs, miles, etc.\"\n                        value={unit}\n                        onChange={e => setUnit(e.target.value)} \n                        required=\"required\"\n                        id=\"unit\" /></p>\n                    <p><label for=\"date\">Date</label>\n                    <input\n                        type=\"date\"\n                        placeholder=\"MM-DD-YYYY\"\n                        value={date}\n                        onChange={e => setDate(e.target.value)} \n                        required=\"required\"\n                        id=\"date\" /></p>\n                    <p><label for=\"submit\">\n                    <button\n                        type=\"submit\"\n                        onClick={addExercise}\n                        id=\"submit\"\n                    >Add New Exercise</button></label>\n                    </p>\n                </fieldset>\n                </form>\n            </article>\n        </>\n    );\n}\n\nexport default AddExercisePage;","import React from 'react';\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useState } from 'react';\n\nexport const EditExercisePage = ({ exercise }) => {\n\n    const [name, setName] = useState(exercise.name);\n    const [reps, setReps] = useState(exercise.reps);\n    const [weight, setWeight] = useState(exercise.weight);\n    const [unit, setUnit] = useState(exercise.unit);\n    const [date, setDate] = useState(exercise.date);\n\n    const history = useHistory();\n\n    const editExercise = async () => {\n        const response = await fetch(`https://swolebro-api.herokuapp.com/exercises/${exercise._id}`, {\n            method: 'PUT',\n            body: JSON.stringify({\n                name: name,\n                reps: reps,\n                weight: weight,\n                unit: unit,\n                date: date\n            }),\n            headers: { 'Content-Type': 'application/json', },\n        });\n        \n        if (response.status === 200) {\n            alert(\"Successfully modified your lift!\");\n        } else {\n            const errMessage = await response.json();\n            alert(`Failed to update document. Status ${response.status}. ${errMessage.Error}`);\n        }\n        history.push(\"/\");\n    }\n\n    return (\n        <>\n            <article>\n                <h2>Modify Your Lift</h2>\n                <p>Getting stronger already are we? Go ahead and make your changes.</p>\n                <form onSubmit={(e) => { e.preventDefault(); }}>\n                    <fieldset>\n                        {/* <legend>Edit</legend>\n                        <label for=\"name\">Exercise</label> */}\n                        <input\n                            type=\"text\"\n                            value={name}\n                            onChange={e => setName(e.target.value)}\n                            minLength={1}\n                            required=\"required\"\n                            id=\"name\" />\n                        <label for=\"reps\">Reps</label>\n                        <input\n                            type=\"number\"\n                            value={reps}\n                            onChange={e => setReps(e.target.value)}\n                            min=\"1\"\n                            required=\"required\"\n                            id=\"reps\" />\n                        <label for=\"weight\">Weight</label>\n                        <input\n                            type=\"number\"\n                            min={1}\n                            value={weight}\n                            onChange={e => setWeight(e.target.value)}\n                            required=\"required\"\n                            id=\"weight\" />\n                        <label for=\"unit\">Unit</label>\n                        <input\n                            type=\"text\"\n                            value={unit}\n                            onChange={e => setUnit(e.target.value)}\n                            required=\"required\"\n                            id=\"unit\" />\n                        <label for=\"date\">Date</label>\n                        <input\n                            type=\"date\"\n                            value={date}\n                            onChange={e => setDate(e.target.value)}\n                            required=\"required\"\n                            id=\"date\" />\n                        <label for=\"submit\">\n                            <button\n                                onClick={editExercise}\n                                id=\"submit\"\n                            >Save Changes</button>\n                        </label>\n                        <label for=\"cancel-btn\">\n                            <Link to=\"..\">\n                                <button id=\"cancel-btn\">\n                                    Cancel\n                                </button>\n                            </Link>\n                        </label>\n                    </fieldset>\n                </form>\n            </article>\n        </>\n    );\n}\nexport default EditExercisePage;","// Import dependencies\nimport React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { useState } from 'react';\n\n// Import Components, styles, media\nimport Navigation from './components/Navigation';\nimport './App.css';\n\n// Import Pages\nimport HomePage from './pages/HomePage';\nimport AddExercisePage from './pages/AddExercisePage';\nimport EditExercisePage from './pages/EditExercisePage';\n\n// Define the function that renders the content in routes using State.\nfunction App() {\n\n  const [exercise, setExercise] = useState([]);\n\n  return (\n    <>\n      <Router>\n        <header>\n          <div id='appTitle'>\n            <h1>💪 SwoleBro</h1>\n          </div>\n          <p>Your exclusive workout companion. Transform your body from slow to swole today!</p>\n        </header>\n\n        <Navigation />\n\n        <main>\n          <Route path=\"/\" exact>\n            <HomePage setExercise={setExercise} />\n          </Route>\n\n          <Route path=\"/add-exercise\">\n            <AddExercisePage />\n          </Route>\n\n          <Route path=\"/edit-exercise\">\n            <EditExercisePage exercise={exercise} />\n          </Route>\n        </main>\n\n        <footer>\n          <p>&copy; 2022 Summer | Steven Tran </p>\n        </footer>\n\n      </Router>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}