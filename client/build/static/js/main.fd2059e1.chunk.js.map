{"version":3,"sources":["components/Navigation.js","components/Exercise.js","components/ExerciseList.js","pages/HomePage.js","pages/AddExercisePage.js","pages/EditExercisePage.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","_jsxs","children","_jsx","Link","to","Exercise","_ref","exercise","onEdit","onDelete","name","reps","weight","unit","date","substring","className","FaPencilAlt","onClick","FaTrash","_id","ExerciseList","exercises","id","map","i","HomePage","setExercise","history","useHistory","_useState","useState","_useState2","_slicedToArray","setExercises","loadExercises","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","fetch","sent","json","stop","apply","arguments","onEditExercise","_ref3","_callee2","_context2","push","_x","onDeleteExercise","_ref4","_callee3","getResponse","_exercises","_context3","concat","method","status","alert","console","error","_x2","useEffect","_Fragment","AddExercisePage","setName","_useState3","_useState4","setReps","_useState5","_useState6","setWeight","_useState7","_useState8","setUnit","_useState9","_useState10","setDate","addExercise","newExercise","body","JSON","stringify","headers","onSubmit","e","preventDefault","for","type","placeholder","value","onChange","target","required","minLength","min","EditExercisePage","editExercise","errMessage","Error","App","Router","Route","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd2059e1.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Navigation() {\n  return (\n    <nav>\n        <Link to=\"/\">Home</Link>\n        <Link to=\"../add-exercise\">Add Exercise</Link>\n    </nav>\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\nimport { FaPencilAlt, FaTrash } from \"react-icons/fa\";\n\nfunction Exercise({ exercise, onEdit, onDelete }) {\n    return (\n        <tr>\n            <td>{exercise.name}</td>\n            <td>{exercise.reps}</td>\n            <td>{exercise.weight}</td>\n            <td>{exercise.unit}</td>\n            <td>{exercise.date.substring(0, 10)}</td>\n            <td>\n                <div className=\"modifier\">\n                    <FaPencilAlt onClick={() => onEdit(exercise)} />\n                </div></td>\n            <td>\n                <div className=\"modifier\">\n                    <FaTrash onClick={() => onDelete(exercise._id)} />\n                </div>\n            </td>\n\n\n        </tr >\n    );\n}\n\nexport default Exercise;","import React from 'react';\nimport Exercise from './Exercise';\n\nfunction ExerciseList({ exercises, onDelete, onEdit }) {\n    return (\n        <table id=\"exercises\">\n            <caption>Workout History</caption>\n            <thead>\n                <tr>\n                    <th>Exercise</th>\n                    <th>Reps</th>\n                    <th>Weight</th>\n                    <th>Unit</th>\n                    <th>Date</th>\n                    <th>Edit</th>\n                    <th>Delete</th>\n                </tr>\n            </thead>\n            <tbody>\n                {exercises.map((exercise, i) => \n                    <Exercise \n                        exercise={exercise} \n                        key={i}\n                        onDelete={onDelete}\n                        onEdit={onEdit} \n                    />)}\n            </tbody>\n        </table>\n    );\n}\n\nexport default ExerciseList;\n","import React from 'react';\nimport ExerciseList from '../components/ExerciseList';\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nfunction HomePage({ setExercise }) {\n    // Use the history for updating\n    const history = useHistory();\n\n    // Use state to bring in the data\n    const [exercises, setExercises] = useState([]);\n\n    // RETRIEVE the list of exercises\n    const loadExercises = async () => {\n        const response = await fetch('https://swolebrodb.onrender.com/exercises');\n        const exercises = await response.json();\n        setExercises(exercises);\n    } \n    \n\n    // UPDATE a exercise\n    const onEditExercise = async exercise => {\n        setExercise(exercise);\n        history.push(\"/edit-exercise\");\n    }\n\n\n    // DELETE a exercise  \n    const onDeleteExercise = async _id => {\n        const response = await fetch(`https://swolebrodb.onrender.com/exercises/${_id}`, { method: 'DELETE' });\n        // const response = await fetch(`https://swolebro-api.herokuapp.com/exercises/${_id}`, { method: 'DELETE' });\n        if (response.status === 204) {\n            const getResponse = await fetch('/exercises');\n            const exercises = await getResponse.json();\n            setExercises(exercises);\n            alert(\"Exercise Removed!\");\n        } else {\n            console.error(`Failed to delete exercise with _id = ${_id}. Error Code = ${response.status}`)\n        }\n    }\n\n    // LOAD the exercises\n    useEffect(() => {\n        loadExercises();\n    }, []);\n    \n\n    // DISPLAY the exercises\n    return (\n        <>\n            <article>\n                <h2>About</h2>\n                <p>Here you can view, modify, and delete your existing lifts or exercises. <br></br>To add a new exercise, select the \"Add Exercise\" button above.</p>\n                <ExerciseList \n                    exercises={exercises} \n                    onEdit={onEditExercise} \n                    onDelete={onDeleteExercise} \n                />\n            </article>\n        </>\n    );\n}\n\nexport default HomePage;","import React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nexport const AddExercisePage = () => {\n\n    const [name, setName] = useState('');\n    const [reps, setReps] = useState('');\n    const [weight, setWeight] = useState('');\n    const [unit, setUnit] = useState('lbs');\n    const [date, setDate] = useState('');\n    \n    const history = useHistory();\n\n    const addExercise = async () => {\n        const newExercise = { name, reps, weight, unit, date };\n        const response = await fetch('https://swolebrodb.onrender.com/exercises', {\n            method: 'post',\n            body: JSON.stringify(newExercise),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n        if(response.status === 201){\n            alert(\"Nice work! Now on to the next set!\");\n        } else {\n            alert(`Error ${response.status}: \"Invalid request\"`);\n        }\n        history.push(\"/\");\n    };\n\n    return (\n        <>\n        <article>\n            <h2>Add a new exercise</h2>\n            <p>Fill in the following to add a new exercise to your workout</p>\n            <form onSubmit={(e) => { e.preventDefault();}}>\n                <fieldset>\n                    {/* <legend>Which exercise are you adding?</legend> */}\n                    <p><label for=\"name\">Exercise name</label>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Squat, Bench, Deadlift, eg.\"\n                        value={name}\n                        onChange={e => setName(e.target.value)} \n                        required=\"required\"\n                        minLength=\"1\"\n                        id=\"name\" /></p>\n                    <p><label for=\"reps\">Reps Completed</label>\n                    <input\n                        type=\"number\"\n                        value={reps}\n                        placeholder=\"# of Reps\"\n                        onChange={e => setReps(e.target.value)} \n                        min=\"1\"\n                        required=\"required\"\n                        id=\"reps\" /></p>\n                    <p><label for=\"weight\">Weight</label>\n                    <input\n                        type=\"number\"\n                        placeholder=\"###\"\n                        value={weight}\n                        onChange={e => setWeight(e.target.value)}\n                        min=\"1\"\n                        required=\"required\"\n                        id=\"weight\" /></p>\n                    <p><label for=\"unit\">Unit</label>\n                    <input\n                        type=\"text\"\n                        placeholder=\"lbs, kgs, miles, etc.\"\n                        value={unit}\n                        onChange={e => setUnit(e.target.value)} \n                        required=\"required\"\n                        id=\"unit\" /></p>\n                    <p><label for=\"date\">Date</label>\n                    <input\n                        type=\"date\"\n                        placeholder=\"MM-DD-YYYY\"\n                        value={date}\n                        onChange={e => setDate(e.target.value)} \n                        required=\"required\"\n                        id=\"date\" /></p>\n                    <p><label for=\"submit\">\n                    <button\n                        type=\"submit\"\n                        onClick={addExercise}\n                        id=\"submit\"\n                    >Add New Exercise</button></label>\n                    </p>\n                </fieldset>\n                </form>\n            </article>\n        </>\n    );\n}\n\nexport default AddExercisePage;","import React from 'react';\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useState } from 'react';\n\nexport const EditExercisePage = ({ exercise }) => {\n\n    const [name, setName] = useState(exercise.name);\n    const [reps, setReps] = useState(exercise.reps);\n    const [weight, setWeight] = useState(exercise.weight);\n    const [unit, setUnit] = useState(exercise.unit);\n    const [date, setDate] = useState(exercise.date);\n\n    const history = useHistory();\n\n    const editExercise = async () => {\n        // const response = await fetch(`/${exercise._id}`, {\n        const response = await fetch(`https://swolebrodb.onrender.com/${exercise._id}`, {\n            method: 'PUT',\n            body: JSON.stringify({\n                name: name,\n                reps: reps,\n                weight: weight,\n                unit: unit,\n                date: date\n            }),\n            headers: { 'Content-Type': 'application/json', },\n        });\n        \n        if (response.status === 200) {\n            alert(\"Successfully modified your lift!\");\n        } else {\n            const errMessage = await response.json();\n            alert(`Failed to update document. Status ${response.status}. ${errMessage.Error}`);\n        }\n        history.push(\"/\");\n    }\n\n    return (\n        <>\n            <article>\n                <h2>Modify Your Lift</h2>\n                <p>Getting stronger already are we? Go ahead and make your changes.</p>\n                <form onSubmit={(e) => { e.preventDefault(); }}>\n                    <fieldset>\n                        {/* <legend>Edit</legend>\n                        <label for=\"name\">Exercise</label> */}\n                        <input\n                            type=\"text\"\n                            value={name}\n                            onChange={e => setName(e.target.value)}\n                            minLength={1}\n                            required=\"required\"\n                            id=\"name\" />\n                        <label for=\"reps\">Reps</label>\n                        <input\n                            type=\"number\"\n                            value={reps}\n                            onChange={e => setReps(e.target.value)}\n                            min=\"1\"\n                            required=\"required\"\n                            id=\"reps\" />\n                        <label for=\"weight\">Weight</label>\n                        <input\n                            type=\"number\"\n                            min={1}\n                            value={weight}\n                            onChange={e => setWeight(e.target.value)}\n                            required=\"required\"\n                            id=\"weight\" />\n                        <label for=\"unit\">Unit</label>\n                        <input\n                            type=\"text\"\n                            value={unit}\n                            onChange={e => setUnit(e.target.value)}\n                            required=\"required\"\n                            id=\"unit\" />\n                        <label for=\"date\">Date</label>\n                        <input\n                            type=\"date\"\n                            value={date}\n                            onChange={e => setDate(e.target.value)}\n                            required=\"required\"\n                            id=\"date\" />\n                        <label for=\"submit\">\n                            <button\n                                onClick={editExercise}\n                                id=\"submit\"\n                            >Save Changes</button>\n                        </label>\n                        <label for=\"cancel-btn\">\n                            <Link to=\"..\">\n                                <button id=\"cancel-btn\">\n                                    Cancel\n                                </button>\n                            </Link>\n                        </label>\n                    </fieldset>\n                </form>\n            </article>\n        </>\n    );\n}\nexport default EditExercisePage;","// Import dependencies\nimport React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { useState } from 'react';\n\n// Import Components, styles, media\nimport Navigation from './components/Navigation';\nimport './App.css';\n\n// Import Pages\nimport HomePage from './pages/HomePage';\nimport AddExercisePage from './pages/AddExercisePage';\nimport EditExercisePage from './pages/EditExercisePage';\n\n// Define the function that renders the content in routes using State.\nfunction App() {\n\n  const [exercise, setExercise] = useState([]);\n\n  return (\n    <>\n      <Router>\n        <header>\n          <div id='appTitle'>\n            <h1>💪 SwoleBro</h1>\n          </div>\n          <p>Your exclusive workout companion. Transform your body from slow to swole today!</p>\n        </header>\n\n        <Navigation />\n\n        <main>\n          <Route path=\"/\" exact>\n            <HomePage setExercise={setExercise} />\n          </Route>\n\n          <Route path=\"/add-exercise\">\n            <AddExercisePage />\n          </Route>\n\n          <Route path=\"/edit-exercise\">\n            <EditExercisePage exercise={exercise} />\n          </Route>\n        </main>\n\n        <footer>\n          <p>&copy; 2022 Summer | Steven Tran </p>\n        </footer>\n\n      </Router>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}